# swagger: "2.0"
openapi: 3.0.0
info:
  description: "API仕様書"
  version: "1.0.0"
  title: "tsugitasu-api"
servers:
  - url: "0dpf7vjoce.execute-api.ap-northeast-1.amazonaws.com/dev"
    variables:
      protocol:
        default: https
        enum:
          - http
          - https
tags:
- name: "user"
  description: "Operations about user"
paths:
  /user/entry/tmp/:
    post:
      tags:
      - "user"
      summary: "ユーザーによる仮登録"
      description: "仮登録が成功すると、送信したメールアドレス宛に確認コードが届く"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/req_mail_pass"
            example:
              email: "hoge@example.com"
              password: "hogehoge345"
      responses:
        "200":
          description: "仮登録成功"
          content:
            application/json: 
              schema:
                $ref: "#/components/schemas/res"
              example:
                message: "tmp successful"
        "400":
          description: "メールアドレスが既に登録されている場合"
          content:
            application/json: 
              schema:
                $ref: "#/components/schemas/res"
              example:
                message: "Email address already exists"
        "502":
          description: "予期しないエラーが起きた場合"
          content:
            application/json: 
              schema:
                $ref: "#/components/schemas/res"
              example:
                message: "Internal server error"
  /user/entry/prd/:
    post:
      tags:
      - "user"
      summary: "ユーザーによる本登録"
      description: "メールアドレスに届いた確認コードを用いて本登録を行うためのエンドポイント"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/prd_req"
            example:
              email: "hoge@example.com"
              confirmation_code: "345352"
      responses:
        "200":
          description: "本登録成功"
          content:
            application/json: 
              schema:
                $ref: "#/components/schemas/res"
              example:
                message: "prd successful"
        "400":
          description: "認証に失敗した場合"
          content:
            application/json: 
              schema:
                oneOf:
                  - $ref: "#/components/schemas/res"
                  - $ref: "#/components/schemas/res"
              examples:
                response1:
                  summary: 入力したコードが間違っている場合
                  value:
                    message: "Wrong confirmation code"
                response2:
                  summary: 時間切れなどでコードが無効な場合
                  value:
                    message: "Code is not valid"
        "502":
          description: "予期しないエラーが起きた場合"
          content:
            application/json: 
              schema:
                $ref: "#/components/schemas/res"
              example:
                message: "Internal server error"
  /user/login/:
    post:
      tags:
      - "user"
      summary: "ユーザーによるログイン"
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/req_mail_pass"
            example:
              email: "hoge@example.com"
              password: "hogehoge345"
      responses:
        "200":
          description: "ログイン成功"
          content:
            application/json: 
              schema:
                $ref: "#/components/schemas/res_token"
              example:
                message: "Login successful"
                AccessToken: "eyJraWQiOiJ5aGJoeDdUclhpWVNDU1h....zGh4xMblotEHgbiY5_GVEPGIIWzrP5xg"
                RefreshToken: "qykPXss0Uha7fa_3IqG5FDHCawDcGJ2....99bAeeAN60WoGNL_-oPAgc6lpefefKEf"
                IdToken: "LTFfWmpMbHZ5bkRuIiwiY29nbml0b....Njg5Mi1kODE0LTRmNTgtYTA4My04ZTIyM"
        "400":
          description: "ログイン失敗"
          content:
            application/json: 
              schema:
                $ref: "#/components/schemas/res"
              example:
                message: "Login failed"

        "502":
          description: "予期しないエラーが起きた場合"
          content:
            application/json: 
              schema:
                $ref: "#/components/schemas/res"
              example:
                message: "Internal server error"
components:
  schemas:
    req_mail_pass: 
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    prd_req: 
      type: object
      properties:
        email:
          type: string
        confirmation_code:
          type: string
    res: 
      type: object
      properties:
        message:
          type: string
    res_token: 
      type: object
      properties:
        message:
          type: string
        AccessToken:
          type: "string"
        RefreshToken:
          type: "string"
        IdToken:
          type: "string"